name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  deploy_application:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Clone Project
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_KEY }}
          username: ${{secrets.SSH_USER}}
          script: |
            folder=$(ls)
            if echo $folder | grep -c ${{vars.PROJECT_NAME}}; 
            then 
              cd ${{vars.PROJECT_NAME}}
              git pull
            else 
              git clone ${{vars.PROJECT_URL}};
            fi

      - name: Build Project
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_KEY }}
          username: ${{ secrets.SSH_USER }}

          script: |
            cd ${{vars.PROJECT_NAME}}
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            git checkout main
            git pull
            export NODE_ENV=${{vars.NODE_ENV}}
            export DATABASE_URL=${{secrets.DATABASE_URL}}
            export JWT_SECRET=${{secrets.JWT_SECRET}}
            export DBUSERNAME=${{secrets.DBUSERNAME}}
            export DBPASSWORD=${{secrets.DBPASSWORD}}
            export DATABASE=${{secrets.DATABASE}}
            sudo docker compose build --force-rm --no-cache --compress
            sudo docker compose up -d